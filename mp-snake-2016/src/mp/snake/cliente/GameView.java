/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp.snake.cliente;

import java.awt.Color;
import java.awt.GridLayout;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author luisca
 */
public class GameView extends javax.swing.JFrame  implements Observer{
    
        private GridLayout layout;
        private JPanel[][] referencia;
        private Color[] coloresTablero={Color.WHITE,Color.BLACK,Color.ORANGE};
        private Color[] coloresJugador={Color.RED,Color.BLUE,Color.PINK,Color.BLUE,Color.YELLOW};
        private GestorVistas gestor;
        
 
    public GameView(int filas, int columnas, int id, GestorVistas g) {
        initComponents();
        jButtonFinalizar.setFocusable(false);
        layout =new GridLayout(filas, columnas);
        referencia = new JPanel[filas][columnas];
        gamePanel.setLayout(layout);
        for (int i = 0; i < layout.getRows(); i++) {
            for (int j = 0; j <layout.getColumns(); j++) {
                JPanel p= new JPanel();
                p.setBackground(Color.WHITE);
                referencia[i][j]=p;
                gamePanel.add(p);
                 
            }
            
        }
        
        this.gestor = g;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel = new javax.swing.JPanel();
        jButtonFinalizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        gamePanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );

        jButtonFinalizar.setText("Finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(691, Short.MAX_VALUE)
                        .addComponent(jButtonFinalizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFinalizar)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
            try {
                // TODO add your handling code here:
                gestor.finalizar();
            } catch (IOException ex) {
                Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButtonFinalizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButtonFinalizar;
    // End of variables declaration//GEN-END:variables
    void arrancar(){    
    setVisible(true);
        setLocationRelativeTo(null);
    }
    void setControlador(Controlador controlador){
        addKeyListener(controlador);
    }

    @Override
    public void update(Observable o, Object arg) {
         //Aqui se pinta la serpiente
        String msgR=(String)arg;
        String[] args= msgR.split(";");
        Color colorSerpiente = (Boolean.parseBoolean(args[0]))? coloresJugador[Integer.parseInt(args[1])]:coloresTablero[Integer.parseInt(args[1])];
        int x = Integer.parseInt(args[2]);
        int y = Integer.parseInt(args[3]);
        referencia[x][y].setBackground(colorSerpiente);
        if(args.length > 4){
            x=Integer.parseInt(args[4]);
            y=Integer.parseInt(args[5]);
            referencia[4][5].setBackground(coloresTablero[0]);
        }
    }
}



